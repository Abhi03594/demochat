version: '1.0'
steps:

 build-step:
     type: build
     dockerfile: Dockerfile
     image-name: containers101/demochat
     tag: ${{CF_BRANCH}}

 unit-tests:
      image: ${{build-step}}
      fail-fast: false
      #working-directory : ${{initial-clone}}
      commands:
        #- npm install
        #- npm install -g gulp
        - npm test

 push to registry:
     type: push
     candidate: ${{build-step}}
     tag: ${{CF_BRANCH}}

 demo-chat compositon:
      type: launch-composition
      environmentName: 'env-composition-name'
      composition: demochat-oleg

 deploy to ecs:
     image: codefresh/cf-deploy-ecs
     commands:
       - cfecs-update --image-name containers101/demochat --image-tag ${{CF_BRANCH}} eu-west-1 demochat-production demochat-service
     environment:
       - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
       - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
     when:
      branch:
        only:
          - staging
