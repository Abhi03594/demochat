version: '1.0'
steps:
  build_step:
    title: Build
    type: build
    dockerfile: Dockerfile
    image_name: ncodefresh/demochat
    tag: '${{CF_BRANCH}}'

# see https://docs.codefresh.io/docs/variables to find how to export custom env vars
  generate_env_vars:
    title: Unit Tests
    image: ${{build_step}}
    fail_fast: false
    commands:
      - cf_export TAG1=tag1 REGISTRY_NAME=dockerhub
      - echo TAG2=tag2 >> ${{CF_VOLUME_PATH}}/env_vars_to_export

  unit_test:
    type: composition
    working_directory: '${{main_clone}}'
    composition:
      version: '2'
      services:
        mongo:
          image: 'mongo:latest'
          ports:
            - 27017
    composition_candidates:
      test:
        image: '${{build_step}}'
        command: npm test

#  see https://docs.codefresh.io/docs/push-1#section-using-codefresh-docker-registry-integration to find more about multiple tags
  push_to_registry:
    title: Push To Registry
    type: push
    registry: ${{REGISTRY_NAME}}
    candidate: ${{build_step}}
    tags:
      - ${TAG1}
      - ${TAG2}

  deploy_to_ecs:
    title: Deploy Container to ECS
    image: codefresh/cf-deploy-ecs
    commands:
      - >-
        cfecs-update --image-name containers101/demochat --image-tag
        ${{CF_BRANCH}} eu-west-1 demochat-production demochat-service
    environment:
      - 'AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}'
      - 'AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}'
    when:
      condition:
        all:
          deploy_to_ecs: '"${{DEPLOY_ECS}}" == "true"'

  deploy_to_kubernetes:
    image: codefresh/cf-deploy-kubernetes
    tag: latest
    working_directory: ${{main_clone}}
    commands:
      - /cf-deploy-kubernetes deployment.yml
    environment:
      - KUBERNETES_USER=${{KUBERNETES_USER}}
      - KUBERNETES_PASSWORD=${{KUBERNETES_PASSWORD}}
      - KUBERNETES_SERVER=${{KUBERNETES_SERVER}}
      - DOCKER_IMAGE_TAG=${{CF_BRANCH}}
    when:
      condition:
        all:
          deploy_to_kubernetes: '"${{DEPLOY_KUBERNETES}}" == "true"'
